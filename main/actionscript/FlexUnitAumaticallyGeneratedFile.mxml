<?xml version="1.0" encoding="utf-8"?>
<FxApplication xmlns="http://ns.adobe.com/mxml/2009" xmlns:flexunit="flexunit.flexui.*" creationComplete="onCreationComplete()">	
<Script>
	<![CDATA[

			import flexunit.framework.TestSuite;
			import org.as3commons.reflect.ClassUtilsTest;

			public function currentRunTestSuite():TestSuite
			{
				var testsToRun:TestSuite = new TestSuite();
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnNumber"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetSuperClass"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetImplementedInterfaceNames"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForInstance"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnClass"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetNameFromFullyQualifiedName_forArray"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testConvertFullyQualifiedName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnBoolean"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetSuperClassName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedNameWithReplaceColons"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedImplementedInterfaceNames_replaceColons"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnint"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testIsSubclassOf2"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldThrowClassNotFoundError"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetImplementedInterfaces"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnUint"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedSuperClassNameWithReplaceColons"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedSuperClassName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testIsSubclassOf"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetFullyQualifiedImplementedInterfaceNames"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetNameFromFullyQualifiedName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetName"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetSuperClassWithObject"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testGetSuperClassWithString"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnDate"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnString"));
				testsToRun.addTest(new org.as3commons.reflect.ClassUtilsTest("testForName_shouldReturnArray"));
				return testsToRun;
			}
			private function onCreationComplete():void
			{
				testRunner.run(currentRunTestSuite(), "as3_commons_reflect");
			}
	]]>
</Script>
<flexunit:FlexUnitTestRunnerUI id="testRunner"/>
	
</FxApplication>
